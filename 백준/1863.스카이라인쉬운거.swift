/* 1863번 스카이라인 쉬운거
시간 제한    메모리 제한    제출    정답    맞힌 사람    정답 비율
2 초    128 MB    3080    1254    999    40.876%
문제
도시에서 태양이 질 때에 보이는 건물들의 윤곽을 스카이라인이라고 한다. 스카이라인만을 보고서 도시에 세워진 건물이 몇 채인지 알아 낼 수 있을까? 건물은 모두 직사각형 모양으로 밋밋하게 생겼다고 가정한다.
정확히 건물이 몇 개 있는지 알아내는 것은 대부분의 경우에 불가능하고, 건물이 최소한 몇 채 인지 알아내는 것은 가능해 보인다. 이를 알아내는 프로그램을 작성해 보자.

입력
첫째 줄에 n이 주어진다. (1 ≤ n ≤ 50,000) 다음 n개의 줄에는 왼쪽부터 스카이라인을 보아 갈 때 스카이라인의 고도가 바뀌는 지점의 좌표 x와 y가 주어진다. (1 ≤ x ≤ 1,000,000. 0 ≤ y ≤ 500,000) 첫 번째 지점의 x좌표는 항상 1이다.

출력
첫 줄에 최소 건물 개수를 출력한다.

..........................
.....XX.........XXX.......
.XXX.XX.......XXXXXXX.....
XXXXXXXXXX....XXXXXXXXXXXX

예제 입력1 >>> 출력 6
10
1 1
2 2
5 1
6 3
8 1
11 0
15 2
17 3
20 2
22 1

예제 입력2 >>> 출력 4
4
1 4
2 3
3 5
4 4

예제 입력3 >>> 출력 5 
6
1 1
2 2
5 3
6 1
7 3
8 2
 
풀이
발딩의 처음부터 보면서 스택의 마지막보다 크면 어펜드, 전보다 작으면 이전꺼 삭제하고 결과값 +1
마지막에 남은 스택의 갯수도 결과에 추가하는데, 값이 0이 아닌 것만 추가
*/

let n = Int(readLine()!)!
var building: [[Int]] = []
for _ in 0..<n {
    building.append(readLine()!.split(separator: " ").map {Int($0)!})
}
var stk: [Int] = [building[0][1]]
var res = 0
for i in 0..<n {
    while !stk.isEmpty && stk.last! > building[i][1] {
        stk.removeLast()
        res += 1
    }
    if stk.isEmpty || stk.last! != building[i][1]{
        stk.append(building[i][1])
    }
}
print(res + stk.filter { Int($0) != 0 }.count)
